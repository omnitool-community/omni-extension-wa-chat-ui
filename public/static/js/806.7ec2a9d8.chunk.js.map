{"version":3,"file":"static/js/806.7ec2a9d8.chunk.js","mappings":"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","sources":["pages/chat/components/option-menu/styles.tsx","pages/chat/components/option-menu/index.tsx","pages/chat/hooks/useCloseMenu.tsx","pages/chat/components/search-field/styles.tsx","pages/chat/components/search-field/index.tsx","pages/chat/components/sidebar/alert/styles.tsx","pages/chat/components/sidebar/alert/index.tsx","pages/chat/components/sidebar/contacts/styles.tsx","pages/chat/components/sidebar/contacts/index.tsx","pages/chat/components/sidebar/styles.tsx","pages/chat/components/sidebar/index.tsx","pages/chat/layouts/styles.tsx","pages/chat/layouts/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &.btn-pressed {\r\n    border-radius: 50%;\r\n    background: ${(props) => props.theme.options.bg};\r\n  }\r\n`;\r\n\r\nexport const Options = styled.ul`\r\n  z-index: 1000;\r\n  top: 40px;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 200px;\r\n  padding: 10px 0;\r\n  background-color: ${(props) => props.theme.common.secondaryColor};\r\n  border-radius: 3px;\r\n  box-shadow: ${(props) => props.theme.options.boxShadow};\r\n  transition: all 0.2s ease-in;\r\n  opacity: 0;\r\n  transform: scale(0);\r\n\r\n  &.active {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n\r\n  &.right {\r\n    right: unset;\r\n    left: -210px;\r\n  }\r\n`;\r\n\r\nexport const Option = styled.li`\r\n  padding: 15px 20px;\r\n  color: ${(props) => props.theme.common.mainHeadingColor};\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${(props) => props.theme.common.primaryColor};\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport Icon from \"common/components/icons\";\r\nimport useCloseMenu from \"../../hooks/useCloseMenu\";\r\nimport { Container, Button, Options, Option } from \"./styles\";\r\n\r\ntype OptionsMenuProps = {\r\n  iconClassName?: string;\r\n  className?: string;\r\n  iconId: string;\r\n  ariaLabel?: string;\r\n  options: string[];\r\n  position?: string;\r\n  showPressed?: boolean;\r\n  [x: string]: any;\r\n};\r\n\r\nexport default function OptionsMenu(props: OptionsMenuProps) {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const ref = useCloseMenu(() => setShowOptions(false));\r\n  const {\r\n    iconId,\r\n    options,\r\n    ariaLabel,\r\n    className,\r\n    iconClassName,\r\n    position = \"left\",\r\n    showPressed = true,\r\n  } = props;\r\n\r\n  const getBtnClassName = (): string => {\r\n    let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n    _className += className ?? \"\";\r\n\r\n    return _className;\r\n  };\r\n\r\n  const getOptionsClassName = (): string => {\r\n    let className = showOptions ? \"active \" : \"\";\r\n    className += position === \"right\" ? \"right\" : \"\";\r\n\r\n    return className;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n        <Icon id={iconId} className={iconClassName} />\r\n      </Button>\r\n      <Options className={getOptionsClassName()}>\r\n        {options.map((option) => (\r\n          <Option key={option}>{option}</Option>\r\n        ))}\r\n      </Options>\r\n    </Container>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function useCloseMenu(handler: Function) {\r\n  const ref = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: any) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        handler();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"click\", handleClickOutside);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, [ref, handler]);\r\n\r\n  return ref;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchWrapper = styled.div`\r\n  padding: 7px 10px;\r\n  height: 50px;\r\n  background: ${(props) => props.theme.common.secondaryColor};\r\n  position: relative;\r\n\r\n  .search-icon {\r\n    opacity: 1;\r\n    transition-delay: 0.3s;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all 0.8s ease;\r\n  }\r\n\r\n  .search__back-btn {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all 0.8s ease;\r\n    opacity: 0;\r\n    transition-delay: 0.3s;\r\n    color: ${(props) => props.theme.search.iconColor};\r\n  }\r\n\r\n  &:focus-within {\r\n    .search-icon {\r\n      opacity: 0;\r\n      transition-delay: 0s;\r\n    }\r\n\r\n    .search__back-btn {\r\n      transform: rotate(360deg);\r\n      opacity: 1;\r\n      transition-delay: 0s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  color: ${(props) => props.theme.search.iconColor};\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 24px;\r\n  height: 24px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background: ${(props) => props.theme.common.primaryColor};\r\n  color: ${(props) => props.theme.common.subHeadingColor};\r\n  padding-left: 60px;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  &::placeholder {\r\n    /* color: rgb(74, 74, 74); */\r\n    color: ${(props) => props.theme.common.subHeadingColor};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import Icon from \"common/components/icons\";\r\nimport { SearchWrapper, IconContainer, Input } from \"./styles\";\r\n\r\ntype SearchFieldProps = {\r\n  placeholder?: string;\r\n  [x: string]: any;\r\n};\r\n\r\nexport default function SearchField(props: SearchFieldProps) {\r\n  const { placeholder, ...rest } = props;\r\n\r\n  return (\r\n    <SearchWrapper {...rest}>\r\n      <IconContainer>\r\n        <Icon id=\"search\" className=\"search-icon\" />\r\n        <button className=\"search__back-btn\">\r\n          <Icon id=\"back\" />\r\n        </button>\r\n      </IconContainer>\r\n      <Input placeholder={placeholder ?? \"Search or start a new chat\"} />\r\n    </SearchWrapper>\r\n  );\r\n}\r\n","import { BiX } from \"react-icons/bi\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const AlertContainer = styled.div`\r\n  min-height: 85px;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  background: ${(props) => props.theme.alert.infoColor};\r\n  position: relative;\r\n\r\n  .underline {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 15px;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.alert.closeIconColor};\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  margin-right: 10px;\r\n\r\n  .icon {\r\n    color: ${(props) => props.theme.alert.iconContainerColor} !important;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  &:first-of-type {\r\n    font-size: 1rem;\r\n    margin-bottom: 5px;\r\n    color: ${(props) => props.theme.common.mainHeadingColor};\r\n  }\r\n\r\n  &:last-of-type {\r\n    font-size: 0.85rem;\r\n    color: ${(props) => props.theme.common.subHeadingColor};\r\n    line-height: 17px;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport Icon from \"common/components/icons\";\r\nimport { AlertContainer, IconWrapper, TextContainer, Text, CloseIcon } from \"./styles\";\r\n\r\nexport default function SidebarAlert() {\r\n  const [isClose, setIsClose] = useState(false);\r\n\r\n  /*if (isClose)*/ return <></>;\r\n\r\n  return (\r\n    <>\r\n      <AlertContainer>\r\n        <CloseIcon onClick={() => setIsClose(true)} />\r\n        <IconWrapper>\r\n          <Icon id=\"noWifi\" className=\"icon\" />\r\n        </IconWrapper>\r\n        <TextContainer>\r\n          <Text> No Contacts </Text>\r\n          <Text>\r\n            You can import Contacts from Google{\" \"}\r\n            <a className=\"underline\" href=\"https://www.google.com\" target=\"_blank\" rel=\"noreferrer\">\r\n              {\" \"}\r\n              Learn more.{\" \"}\r\n            </a>\r\n          </Text>\r\n        </TextContainer>\r\n      </AlertContainer>\r\n    </>\r\n  );\r\n}\r\n","import Icon from \"common/components/icons\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Contact = styled.div<{ isActive?: boolean }>`\r\n  height: 72px;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${(props) => props.theme.common.primaryColor};\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.isActive &&\r\n    css`\r\n      background-color: ${(props) => props.theme.common.primaryColor};\r\n    `};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.common.primaryColor};\r\n  }\r\n\r\n  .sidebar-contact__icons,\r\n  &:not(:focus) .sidebar-contact__icons {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform: translateX(24px);\r\n    transition: transform 0.5s ease;\r\n  }\r\n\r\n  &:hover .sidebar-contact__icons {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .sidebar-contact__icons > * {\r\n    margin-left: 8px;\r\n    color: ${(props) => props.theme.common.headerIconColor};\r\n  }\r\n\r\n  .icon {\r\n    color: ${(props) => props.theme.common.primaryColor};\r\n  }\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  overflow: hidden;\r\n  flex: 1;\r\n`;\r\n\r\nexport const contentStyles = css`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const TopContent = styled.div`\r\n  margin-bottom: 2px;\r\n\r\n  ${contentStyles}\r\n`;\r\n\r\nexport const messageStyles = css`\r\n  flex: 1;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\n  color: ${(props) => props.theme.common.mainHeadingColor};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n\r\n  ${messageStyles}\r\n`;\r\n\r\nexport const Time = styled.span`\r\n  font-size: 0.7rem;\r\n  color: ${(props) => props.theme.common.subHeadingColor};\r\n`;\r\n\r\nexport const BottomContent = styled.div`\r\n  ${contentStyles}\r\n`;\r\n\r\nexport const MessageWrapper = styled.div`\r\n  color: ${(props) => props.theme.common.subHeadingColor};\r\n  font-size: 0.85rem;\r\n  margin-right: 3px;\r\n  overflow: hidden;\r\n\r\n  ${contentStyles}\r\n`;\r\n\r\nexport const MessageStatusIcon = styled(Icon)<{ isRead?: boolean }>`\r\n  ${(props) =>\r\n    props.isRead &&\r\n    css`\r\n      color: ${(props) => props.theme.common.readIconColor};\r\n    `};\r\n`;\r\n\r\nexport const Subtitle = styled.span`\r\n  margin-left: 3px;\r\n`;\r\n\r\nexport const UnreadContact = styled.span`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.common.secondaryColor} !important;\r\n  background-color: ${(props) => props.theme.common.tertiaryColor};\r\n  border-radius: 18px;\r\n  min-width: 18px;\r\n  height: 18px;\r\n  padding: 0 3px;\r\n  line-height: 18px;\r\n  vertical-align: middle;\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n`;\r\n","import Icon from \"common/components/icons\";\r\nimport { Inbox } from \"common/types/common.type\";\r\nimport {\r\n  Avatar,\r\n  AvatarWrapper,\r\n  BottomContent,\r\n  Contact,\r\n  Content,\r\n  MessageStatusIcon,\r\n  MessageWrapper,\r\n  Name,\r\n  Subtitle,\r\n  Time,\r\n  TopContent,\r\n  UnreadContact,\r\n} from \"./styles\";\r\n\r\ntype InboxContactProps = {\r\n  inbox: Inbox;\r\n  onChangeChat?: Function;\r\n  isActive?: boolean;\r\n};\r\n\r\nexport default function InboxContact(props: InboxContactProps) {\r\n  const { onChangeChat, isActive } = props;\r\n  const { name, lastMessage, image, timestamp } = props.inbox;\r\n\r\n  const handleChangeChat = () => {\r\n    if (onChangeChat) {\r\n      onChangeChat(props.inbox);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Contact isActive={isActive} onClick={handleChangeChat}>\r\n      <AvatarWrapper>\r\n        <Avatar src={image} />\r\n      </AvatarWrapper>\r\n      <Content>\r\n        <TopContent>\r\n          <Name>{name}</Name>\r\n          {timestamp && lastMessage ? <Time>{timestamp}</Time> : <Trailing {...props.inbox} />}\r\n        </TopContent>\r\n\r\n        <BottomContent>\r\n          <MessageWrapper>\r\n            <Message {...props.inbox} />\r\n          </MessageWrapper>\r\n\r\n          {timestamp && lastMessage && <Trailing {...props.inbox} />}\r\n        </BottomContent>\r\n      </Content>\r\n    </Contact>\r\n  );\r\n}\r\n\r\nfunction Message(props: Pick<Inbox, \"messageStatus\" | \"lastMessage\">) {\r\n  const { lastMessage, messageStatus } = props;\r\n\r\n  if (!lastMessage) return <></>;\r\n\r\n  return (\r\n    <>\r\n      <MessageStatusIcon\r\n        isRead={messageStatus === \"READ\"}\r\n        id={messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}\r\n      />\r\n      <Subtitle>{lastMessage}</Subtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Trailing(props: Pick<Inbox, \"isPinned\" | \"notificationsCount\">) {\r\n  const { isPinned, notificationsCount } = props;\r\n\r\n  return (\r\n    <div className=\"sidebar-contact__icons\">\r\n      {isPinned && <Icon id=\"pinned\" className=\"sidebar-contact__icon\" />}\r\n\r\n      {notificationsCount !== undefined && notificationsCount > 0 && (\r\n        <UnreadContact>{notificationsCount}</UnreadContact>\r\n      )}\r\n\r\n      <button aria-label=\"sidebar-contact__btn\">\r\n        <Icon id=\"downArrow\" className=\"sidebar-contact__icon sidebar-contact__icon--dropdown\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const SidebarContainer = styled.aside`\r\n  min-width: 300px;\r\n  flex: 40%;\r\n  border-right: 1px solid ${(props) => props.theme.common.borderColor};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 1000px) and (max-width: 1300px) {\r\n    flex: 35%;\r\n\r\n    & ~ div {\r\n      flex: 65%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1301px) {\r\n    flex: 30%;\r\n\r\n    & ~ div {\r\n      flex: 70%;\r\n    }\r\n  }\r\n\r\n  .icon {\r\n    color: ${(props) => props.theme.common.headerIconColor};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  background: ${(props) => props.theme.common.primaryColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 60px;\r\n  padding: 10px;\r\n  min-height: 60px;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Actions = styled.div`\r\n  margin-right: 20px;\r\n\r\n  & > * {\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ThemeIconContainer = styled.div`\r\n  svg {\r\n    margin-bottom: 2px;\r\n    width: 20px;\r\n    height: 20px;\r\n    fill: ${(props) => props.theme.common.headerIconColor};\r\n  }\r\n`;\r\n\r\nexport const ContactContainer = styled.div`\r\n  flex: 1;\r\n  overflow-y: scroll;\r\n  background: ${(props) => props.theme.common.secondaryColor};\r\n  border-top: 1px solid ${(props) => props.theme.common.borderColor};\r\n`;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n\r\nimport SidebarAlert from \"./alert\";\r\nimport InboxContact from \"./contacts\";\r\nimport OptionsMenu from \"../option-menu\";\r\nimport SearchField from \"../search-field\";\r\nimport Icon from \"common/components/icons\";\r\nimport { useAppTheme } from \"common/theme\";\r\nimport { Inbox } from \"common/types/common.type\";\r\nimport { useChatContext } from \"pages/chat/context/chat\";\r\nimport {\r\n  Actions,\r\n  Avatar,\r\n  ContactContainer,\r\n  Header,\r\n  ImageWrapper,\r\n  SidebarContainer,\r\n  ThemeIconContainer,\r\n} from \"./styles\";\r\n\r\nexport default function Sidebar() {\r\n  const theme = useAppTheme();\r\n  const navigate = useNavigate();\r\n  const chatCtx = useChatContext();\r\n\r\n  const handleChangeThemeMode = () => {\r\n    theme.onChangeThemeMode();\r\n  };\r\n\r\n  const handleChangeChat = (chat: Inbox) => {\r\n    chatCtx.onChangeChat(chat);\r\n    navigate(\"/\" + chat.id);\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <Header>\r\n        <ImageWrapper>\r\n          <Avatar src=\"./assets/images/profile.png\" />\r\n        </ImageWrapper>\r\n        <Actions>\r\n          <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n            {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n          </ThemeIconContainer>\r\n          <button aria-label=\"Status\">\r\n            <Icon id=\"status\" className=\"icon\" />\r\n          </button>\r\n          <button aria-label=\"New chat\">\r\n            <Icon id=\"chat\" className=\"icon\" />\r\n          </button>\r\n          <OptionsMenu\r\n            iconClassName=\"icon\"\r\n            className=\"icon\"\r\n            ariaLabel=\"Menu\"\r\n            iconId=\"menu\"\r\n            options={[\r\n              \"New group\",\r\n              \"Create a room\",\r\n              \"Profile\",\r\n              \"Archived\",\r\n              \"Starred\",\r\n              \"Settings\",\r\n              \"Log out\",\r\n            ]}\r\n          />\r\n        </Actions>\r\n      </Header>\r\n      <SidebarAlert />\r\n      <SearchField />\r\n      <ContactContainer>\r\n        {chatCtx.inbox.map((inbox) => (\r\n          <InboxContact\r\n            key={inbox.id}\r\n            inbox={inbox}\r\n            isActive={inbox.id === chatCtx.activeChat?.id}\r\n            onChangeChat={handleChangeChat}\r\n          />\r\n        ))}\r\n      </ContactContainer>\r\n    </SidebarContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const App = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background: ${(props) => props.theme.layout.bg};\r\n  position: relative;\r\n\r\n  &::before {\r\n    width: 100%;\r\n    /* height: 120px; */\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    content: \"\";\r\n    z-index: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 1450px) {\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    padding-top: 200px;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  max-width: 1450px;\r\n  margin: 0 auto;\r\n  box-shadow: ${(props) => props.theme.layout.contentBoxShadowColor};\r\n  position: relative;\r\n  z-index: 100;\r\n  display: flex;\r\n  overflow: hidden;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (min-width: 1450px) {\r\n    height: calc(100vh - 40px);\r\n  }\r\n`;\r\n","import Sidebar from \"../components/sidebar\";\r\nimport { App, Content, Message } from \"./styles\";\r\n\r\nexport default function ChatLayout(props: { children: any }) {\r\n  return (\r\n    <App>\r\n      <Message>Currently Only available on desktop or large devices 😊.</Message>\r\n      <Content>\r\n        <Sidebar />\r\n        {props.children}\r\n      </Content>\r\n    </App>\r\n  );\r\n}\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Button","button","_templateObject2","props","theme","options","bg","Options","ul","_templateObject3","common","secondaryColor","boxShadow","Option","li","_templateObject4","mainHeadingColor","primaryColor","OptionsMenu","_useState","useState","_useState2","_slicedToArray","showOptions","setShowOptions","ref","handler","useRef","useEffect","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","useCloseMenu","iconId","ariaLabel","className","iconClassName","_props$position","position","_props$showPressed","showPressed","_jsxs","children","_jsx","_className","getBtnClassName","onClick","Icon","id","getOptionsClassName","map","option","SearchWrapper","search","iconColor","IconContainer","Input","input","subHeadingColor","SearchField","placeholder","rest","_objectWithoutProperties","_excluded","_objectSpread","alert","infoColor","BiX","closeIconColor","iconContainerColor","p","_templateObject5","SidebarAlert","_Fragment","Contact","isActive","css","headerIconColor","AvatarWrapper","Avatar","img","Content","contentStyles","_templateObject6","TopContent","_templateObject7","messageStyles","_templateObject8","Name","h2","_templateObject9","Time","span","_templateObject10","BottomContent","_templateObject11","MessageWrapper","_templateObject12","MessageStatusIcon","_templateObject13","isRead","_templateObject14","readIconColor","Subtitle","_templateObject15","UnreadContact","_templateObject16","tertiaryColor","InboxContact","onChangeChat","_props$inbox","inbox","name","lastMessage","image","timestamp","src","Trailing","Message","messageStatus","isPinned","notificationsCount","undefined","SidebarContainer","aside","borderColor","Header","header","ImageWrapper","Actions","ThemeIconContainer","ContactContainer","Sidebar","useAppTheme","navigate","useNavigate","chatCtx","useChatContext","handleChangeChat","chat","onChangeThemeMode","mode","BsMoon","BsFillMoonFill","_chatCtx$activeChat","activeChat","App","layout","contentBoxShadowColor","ChatLayout"],"sourceRoot":""}